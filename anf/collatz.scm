;; Expected result: 5
(letrec ((even? (lambda (n) (let ((_16 (= n 0))) (if _16 #t (let ((_17 (= n 1))) (if _17 #f (let ((_18 (- n 2))) (let ((_19 (even? _18))) _19))))))))) (letrec ((div2* (lambda (n s) (let ((_20 (* 2 n))) (let ((_21 (= _20 s))) (if _21 n (let ((_22 (* 2 n))) (let ((_23 (+ _22 1))) (let ((_24 (= _23 s))) (if _24 n (let ((_25 (- n 1))) (let ((_26 (div2* _25 s))) _26)))))))))))) (letrec ((div2 (lambda (n) (div2* n n)))) (letrec ((hailstone* (lambda (n count) (let ((_27 (= n 1))) (if _27 count (let ((_28 (even? n))) (if _28 (let ((_29 (div2 n))) (let ((_30 (+ count 1))) (let ((_31 (hailstone* _29 _30))) _31))) (let ((_34 (* 3 n))) (let ((_32 _34)) (let ((_35 (+ _32 1))) (let ((_33 _35)) (let ((_36 (+ count 1))) (let ((_37 (hailstone* _33 _36))) _37))))))))))))) (letrec ((hailstone (lambda (n) (hailstone* n 0)))) (hailstone 5))))))
