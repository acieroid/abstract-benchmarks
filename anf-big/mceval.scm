 (let ((_self-evaluating?0 (lambda (_exp1) (let ((_p184 (number? _exp1))) (if _p184 #t (let ((_p185 (string? _exp1))) (if _p185 #t #f))))))) (let ((_variable?2 (lambda (_exp3) (symbol? _exp3)))) (let ((_tagged-list?4 (lambda (_exp5 _tag6) (let ((_p186 (pair? _exp5))) (if _p186 (let ((_p187 (car _exp5))) (eq? _p187 _tag6)) #f))))) (let ((_quoted?7 (lambda (_exp8) (_tagged-list?4 _exp8 'quote)))) (let ((_text-of-quotation9 (lambda (_exp10) (cadr _exp10)))) (let ((_assignment?11 (lambda (_exp12) (_tagged-list?4 _exp12 'set!)))) (let ((_assignment-variable13 (lambda (_exp14) (cadr _exp14)))) (let ((_assignment-value15 (lambda (_exp16) (caddr _exp16)))) (let ((_definition?17 (lambda (_exp18) (_tagged-list?4 _exp18 'define)))) (let ((_definition-variable19 (lambda (_exp20) (let ((_p188 (cadr _exp20))) (let ((_p189 (symbol? _p188))) (if _p189 (cadr _exp20) (caadr _exp20))))))) (let ((_make-lambda21 (lambda (_parameters22 _body23) (let ((_p190 (cons _parameters22 _body23))) (cons 'lambda _p190))))) (let ((_definition-value24 (lambda (_exp25) (let ((_p191 (cadr _exp25))) (let ((_p192 (symbol? _p191))) (if _p192 (caddr _exp25) (let ((_p193 (cdadr _exp25))) (let ((_p194 (cddr _exp25))) (_make-lambda21 _p193 _p194))))))))) (let ((_lambda?26 (lambda (_exp27) (_tagged-list?4 _exp27 'lambda)))) (let ((_lambda-parameters28 (lambda (_exp29) (cadr _exp29)))) (let ((_lambda-body30 (lambda (_exp31) (cddr _exp31)))) (let ((_if?32 (lambda (_exp33) (_tagged-list?4 _exp33 'if)))) (let ((_if-predicate34 (lambda (_exp35) (cadr _exp35)))) (let ((_if-consequent36 (lambda (_exp37) (caddr _exp37)))) (let ((_if-alternative38 (lambda (_exp39) (let ((_p195 (cdddr _exp39))) (let ((_p196 (null? _p195))) (let ((_p197 (not _p196))) (if _p197 (cadddr _exp39) 'false))))))) (let ((_make-if40 (lambda (_predicate41 _consequent42 _alternative43) (list 'if _predicate41 _consequent42 _alternative43)))) (let ((_begin?44 (lambda (_exp45) (_tagged-list?4 _exp45 'begin)))) (let ((_begin-actions46 (lambda (_exp47) (cdr _exp47)))) (let ((_last-exp?48 (lambda (_seq49) (let ((_p198 (cdr _seq49))) (null? _p198))))) (let ((_first-exp50 (lambda (_seq51) (car _seq51)))) (let ((_rest-exps52 (lambda (_seq53) (cdr _seq53)))) (let ((_mk-begin54 (lambda (_seq55) (cons 'begin _seq55)))) (let ((_sequence->exp56 (lambda (_seq57) (let ((_p199 (null? _seq57))) (if _p199 _seq57 (let ((_p200 (_last-exp?48 _seq57))) (if _p200 (_first-exp50 _seq57) (_mk-begin54 _seq57)))))))) (let ((_application?58 (lambda (_exp59) (pair? _exp59)))) (let ((_operator60 (lambda (_exp61) (car _exp61)))) (let ((_operands62 (lambda (_exp63) (cdr _exp63)))) (let ((_no-operands?64 (lambda (_ops65) (null? _ops65)))) (let ((_first-operand66 (lambda (_ops67) (car _ops67)))) (let ((_rest-operands68 (lambda (_ops69) (cdr _ops69)))) (let ((_cond?70 (lambda (_exp71) (_tagged-list?4 _exp71 'cond)))) (let ((_cond-clauses72 (lambda (_exp73) (cdr _exp73)))) (let ((_cond-predicate74 (lambda (_clause75) (car _clause75)))) (let ((_cond-else-clause?76 (lambda (_clause77) (let ((_p201 (_cond-predicate74 _clause77))) (eq? _p201 'else))))) (let ((_cond-actions78 (lambda (_clause79) (cdr _clause79)))) (letrec ((_expand-clauses80 (lambda (_clauses81) (let ((_p202 (null? _clauses81))) (if _p202 'false (let ((_first82 (car _clauses81))) (let ((_rest83 (cdr _clauses81))) (let ((_p203 (_cond-else-clause?76 _first82))) (if _p203 (let ((_p204 (null? _rest83))) (if _p204 (let ((_p205 (_cond-actions78 _first82))) (_sequence->exp56 _p205)) (error "ELSE clause isn't last -- COND->IF" _clauses81))) (let ((_p206 (_cond-predicate74 _first82))) (let ((_p207 (_cond-actions78 _first82))) (let ((_p208 (_sequence->exp56 _p207))) (let ((_p209 (_expand-clauses80 _rest83))) (_make-if40 _p206 _p208 _p209)))))))))))))) (let ((_cond->if84 (lambda (_exp85) (let ((_p210 (_cond-clauses72 _exp85))) (_expand-clauses80 _p210))))) (let ((_true?86 (lambda (_x87) (let ((_p211 (eq? _x87 #f))) (not _p211))))) (let ((_false?88 (lambda (_x89) (eq? _x89 #f)))) (let ((_make-procedure90 (lambda (_parameters91 _body92 _env93) (list 'procedure _parameters91 _body92 _env93)))) (let ((_compound-procedure?94 (lambda (_p95) (_tagged-list?4 _p95 'procedure)))) (let ((_procedure-parameters96 (lambda (_p97) (cadr _p97)))) (let ((_procedure-body98 (lambda (_p99) (caddr _p99)))) (let ((_procedure-environment100 (lambda (_p101) (cadddr _p101)))) (let ((_enclosing-environment102 (lambda (_env103) (cdr _env103)))) (let ((_first-frame104 (lambda (_env105) (car _env105)))) (let ((_the-empty-environment106 '())) (let ((_make-frame107 (lambda (_variables108 _values109) (cons _variables108 _values109)))) (let ((_frame-variables110 (lambda (_frame111) (car _frame111)))) (let ((_frame-values112 (lambda (_frame113) (cdr _frame113)))) (let ((_add-binding-to-frame!114 (lambda (_var115 _val116 _frame117) (let ((_p212 (car _frame117))) (let ((_p213 (cons _var115 _p212))) (let ((_$214 (set-car! _frame117 _p213))) (let ((_p215 (cdr _frame117))) (let ((_p216 (cons _val116 _p215))) (set-cdr! _frame117 _p216))))))))) (let ((_extend-environment118 (lambda (_vars119 _vals120 _base-env121) (let ((_p217 (length _vars119))) (let ((_p218 (length _vals120))) (let ((_p219 (= _p217 _p218))) (if _p219 (let ((_p220 (_make-frame107 _vars119 _vals120))) (cons _p220 _base-env121)) (let ((_p221 (length _vars119))) (let ((_p222 (length _vals120))) (let ((_p223 (< _p221 _p222))) (if _p223 (error "Too many arguments supplied" _vars119 _vals120) (error "Too few arguments supplied" _vars119 _vals120)))))))))))) (let ((_lookup-variable-value122 (lambda (_var123 _env124) (letrec ((_env-loop125 (lambda (_env126) (letrec ((_scan127 (lambda (_vars128 _vals129) (let ((_p224 (null? _vars128))) (if _p224 (let ((_p225 (_enclosing-environment102 _env126))) (_env-loop125 _p225)) (let ((_p226 (car _vars128))) (let ((_p227 (eq? _var123 _p226))) (if _p227 (car _vals129) (let ((_p228 (cdr _vars128))) (let ((_p229 (cdr _vals129))) (_scan127 _p228 _p229))))))))))) (let ((_p230 (eq? _env126 _the-empty-environment106))) (if _p230 (error "Unbound variable" _var123) (let ((_frame130 (_first-frame104 _env126))) (let ((_p231 (_frame-variables110 _frame130))) (let ((_p232 (_frame-values112 _frame130))) (_scan127 _p231 _p232)))))))))) (_env-loop125 _env124))))) (let ((_set-variable-value!131 (lambda (_var132 _val133 _env134) (letrec ((_env-loop135 (lambda (_env136) (letrec ((_scan137 (lambda (_vars138 _vals139) (let ((_p233 (null? _vars138))) (if _p233 (let ((_p234 (_enclosing-environment102 _env136))) (_env-loop135 _p234)) (let ((_p235 (car _vars138))) (let ((_p236 (eq? _var132 _p235))) (if _p236 (set-car! _vals139 _val133) (let ((_p237 (cdr _vars138))) (let ((_p238 (cdr _vals139))) (_scan137 _p237 _p238))))))))))) (let ((_p239 (eq? _env136 _the-empty-environment106))) (if _p239 (error "Unbound variable -- SET!" _var132) (let ((_frame140 (_first-frame104 _env136))) (let ((_p240 (_frame-variables110 _frame140))) (let ((_p241 (_frame-values112 _frame140))) (_scan137 _p240 _p241)))))))))) (_env-loop135 _env134))))) (let ((_define-variable!141 (lambda (_var142 _val143 _env144) (let ((_frame145 (_first-frame104 _env144))) (letrec ((_scan146 (lambda (_vars147 _vals148) (let ((_p242 (null? _vars147))) (if _p242 (_add-binding-to-frame!114 _var142 _val143 _frame145) (let ((_p243 (car _vars147))) (let ((_p244 (eq? _var142 _p243))) (if _p244 (set-car! _vals148 _val143) (let ((_p245 (cdr _vars147))) (let ((_p246 (cdr _vals148))) (_scan146 _p245 _p246))))))))))) (let ((_p247 (_frame-variables110 _frame145))) (let ((_p248 (_frame-values112 _frame145))) (_scan146 _p247 _p248)))))))) (let ((_primitive-procedure?149 (lambda (_proc150) (_tagged-list?4 _proc150 'primitive)))) (let ((_primitive-implementation151 (lambda (_proc152) (cadr _proc152)))) (let ((_p249 (list 'car car))) (let ((_p250 (list 'cdr cdr))) (let ((_p251 (list 'cons cons))) (let ((_p252 (list 'null? null?))) (let ((_p253 (list '= =))) (let ((_p254 (list '* *))) (let ((_p255 (list '- -))) (let ((_primitive-procedures153 (list _p249 _p250 _p251 _p252 _p253 _p254 _p255))) (let ((_primitive-procedure-names154 (lambda () (map car _primitive-procedures153)))) (let ((_primitive-procedure-objects155 (lambda () (map (lambda (_proc156) (let ((_p256 (cadr _proc156))) (list 'primitive _p256))) _primitive-procedures153)))) (let ((_setup-environment157 (lambda () (let ((_p257 (_primitive-procedure-names154))) (let ((_p258 (_primitive-procedure-objects155))) (let ((_initial-env158 (_extend-environment118 _p257 _p258 _the-empty-environment106))) (let ((_$259 (_define-variable!141 'true #t _initial-env158))) (let ((_$260 (_define-variable!141 'false #f _initial-env158))) _initial-env158)))))))) (let ((_the-global-environment159 (_setup-environment157))) (let ((_apply-primitive-procedure160 (lambda (_proc161 _args162) (let ((_p261 (_primitive-implementation151 _proc161))) (apply _p261 _args162))))) (letrec ((_mceval163 (lambda (_exp164 _env165) (letrec ((_eval-sequence166 (lambda (_exps167 _env168) (let ((_p262 (_last-exp?48 _exps167))) (if _p262 (let ((_p263 (_first-exp50 _exps167))) (_mceval163 _p263 _env168)) (let ((_p264 (_first-exp50 _exps167))) (let ((_$265 (_mceval163 _p264 _env168))) (let ((_p266 (_rest-exps52 _exps167))) (_eval-sequence166 _p266 _env168))))))))) (let ((_mcapply169 (lambda (_procedure170 _arguments171) (let ((_p267 (_primitive-procedure?149 _procedure170))) (if _p267 (_apply-primitive-procedure160 _procedure170 _arguments171) (let ((_p268 (_compound-procedure?94 _procedure170))) (if _p268 (let ((_p269 (_procedure-body98 _procedure170))) (let ((_p270 (_procedure-parameters96 _procedure170))) (let ((_p271 (_procedure-environment100 _procedure170))) (let ((_p272 (_extend-environment118 _p270 _arguments171 _p271))) (_eval-sequence166 _p269 _p272))))) (error "Unknown procedure type -- APPLY" _procedure170)))))))) (let ((_eval-if172 (lambda (_exp173 _env174) (let ((_p273 (_if-predicate34 _exp173))) (let ((_p274 (_mceval163 _p273 _env174))) (let ((_p275 (_true?86 _p274))) (if _p275 (let ((_p276 (_if-consequent36 _exp173))) (_mceval163 _p276 _env174)) (let ((_p277 (_if-alternative38 _exp173))) (_mceval163 _p277 _env174))))))))) (let ((_eval-assignment175 (lambda (_exp176 _env177) (let ((_p278 (_assignment-variable13 _exp176))) (let ((_p279 (_assignment-value15 _exp176))) (let ((_p280 (_mceval163 _p279 _env177))) (let ((_$281 (_set-variable-value!131 _p278 _p280 _env177))) 'ok))))))) (let ((_eval-definition178 (lambda (_exp179 _env180) (let ((_p282 (_definition-variable19 _exp179))) (let ((_p283 (_definition-value24 _exp179))) (let ((_p284 (_mceval163 _p283 _env180))) (let ((_$285 (_define-variable!141 _p282 _p284 _env180))) 'ok))))))) (letrec ((_list-of-values181 (lambda (_exps182 _env183) (let ((_p286 (_no-operands?64 _exps182))) (if _p286 '() (let ((_p287 (_first-operand66 _exps182))) (let ((_p288 (_mceval163 _p287 _env183))) (let ((_p289 (_rest-operands68 _exps182))) (let ((_p290 (_list-of-values181 _p289 _env183))) (cons _p288 _p290)))))))))) (let ((_p291 (_self-evaluating?0 _exp164))) (if _p291 _exp164 (let ((_p292 (_variable?2 _exp164))) (if _p292 (_lookup-variable-value122 _exp164 _env165) (let ((_p293 (_quoted?7 _exp164))) (if _p293 (_text-of-quotation9 _exp164) (let ((_p294 (_assignment?11 _exp164))) (if _p294 (_eval-assignment175 _exp164 _env165) (let ((_p295 (_definition?17 _exp164))) (if _p295 (_eval-definition178 _exp164 _env165) (let ((_p296 (_if?32 _exp164))) (if _p296 (_eval-if172 _exp164 _env165) (let ((_p297 (_lambda?26 _exp164))) (if _p297 (let ((_p298 (_lambda-parameters28 _exp164))) (let ((_p299 (_lambda-body30 _exp164))) (_make-procedure90 _p298 _p299 _env165))) (let ((_p300 (_begin?44 _exp164))) (if _p300 (let ((_p301 (_begin-actions46 _exp164))) (_eval-sequence166 _p301 _env165)) (let ((_p302 (_cond?70 _exp164))) (if _p302 (let ((_p303 (_cond->if84 _exp164))) (_mceval163 _p303 _env165)) (let ((_p304 (_application?58 _exp164))) (if _p304 (let ((_p305 (_operator60 _exp164))) (let ((_p306 (_mceval163 _p305 _env165))) (let ((_p307 (_operands62 _exp164))) (let ((_p308 (_list-of-values181 _p307 _env165))) (_mcapply169 _p306 _p308))))) (error "Unknown expression type -- EVAL" _exp164)))))))))))))))))))))))))))))) (let ((_$309 (_mceval163 '(define (fac n) (if (= n 0) 1 (* n (fac (- n 1))))) _the-global-environment159))) (_mceval163 '(fac 8) _the-global-environment159))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
