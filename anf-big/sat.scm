(letrec ((phi (lambda (x1 x2 x3 x4) (let ((_1 (not x2))) (let ((_2 (not x3))) (let ((_3 (or x1 _1 _2))) (let ((_4 (not x2))) (let ((_5 (not x3))) (let ((_6 (or _4 _5))) (let ((_7 (or x4 x2))) (let ((_8 (and _3 _6 _7))) _8))))))))))) (letrec ((try (lambda (f) (let ((_9 (f #t))) (let ((_10 (f #f))) (let ((_11 (or _9 _10))) _11)))))) (letrec ((sat-solve-4 (lambda (p) (try (lambda (n1) (try (lambda (n2) (try (lambda (n3) (try (lambda (n4) (p n1 n2 n3 n4)))))))))))) (sat-solve-4 phi))))